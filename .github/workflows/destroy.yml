name: Destroy

on:
  workflow_dispatch:

env:
  TF_VAR_location: ${{ vars.LOCATION }}
  TF_VAR_subscription_id: ${{ vars.SUBSCRIPTION_ID }}
  TF_VAR_client_id: ${{ vars.CLIENT_ID }}
  TF_VAR_client_secret: ${{ secrets.CLIENT_SECRET }}
  TF_VAR_tenant_id: ${{ vars.TENANT_ID }}

jobs:
  terraform_infrastructure:
    name: Terraform infrastructure
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt
        run: terraform fmt -check

      - name: Terraform init
        run: terraform init -backend-config="storage_account_name=${{ needs.terraform_storage_backend.outputs.TFSTATE_STORAGE_ACCOUNT_NAME }}"

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Terraform apply -destroy
        run: terraform apply -no-color -auto-approve -destroy

      - name: Delete vm public ip address secret from repository
        run: gh secret delete VM_PUBLIC_IP_ADDRESS
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete vm password secret from repository
        run: gh secret delete VM_PASSWORD
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  terraform_storage_backend:
    name: Terraform storage backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/helpers/backend_setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt
        run: terraform fmt -check

      - name: Terraform init
        run: terraform init

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Load terraform state
        uses: actions/download-artifact@v4
        with:
          name: terraform-state

      - name: Terraform apply -destroy
        run: terraform apply -no-color -auto-approve -destroy
