name: Deploy

on:
  workflow_dispatch:

env:
  TF_VAR_location: ${{ vars.LOCATION }}
  TF_VAR_subscription_id: ${{ vars.SUBSCRIPTION_ID }}
  TF_VAR_client_id: ${{ vars.CLIENT_ID }}
  TF_VAR_client_secret: ${{ secrets.CLIENT_SECRET }}
  TF_VAR_tenant_id: ${{ vars.TENANT_ID }}
  ARM_CLIENT_ID: ${{ vars.CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ vars.SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ vars.TENANT_ID }}

jobs:
  terraform_storage_backend:
    name: Terraform storage backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/helpers/backend_setup

    outputs:
      TFSTATE_STORAGE_ACCOUNT_NAME: ${{ steps.tfstate_storage_account_name.outputs.TFSTATE_STORAGE_ACCOUNT_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt
        run: terraform fmt -check

      - name: Terraform init
        run: terraform init

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Terraform apply
        run: terraform apply -no-color -auto-approve

      - name: Save terraform state
        uses: actions/upload-artifact@v4
        with:
          name: terraform-state
          path: terraform.tfstate

      - name: Get storage account name
        id: tfstate_storage_account_name
        run: |
          TFSTATE_STORAGE_ACCOUNT_NAME=$(terraform output -raw tfstate_storage_account_name)
          echo "TFSTATE_STORAGE_ACCOUNT_NAME=$TFSTATE_STORAGE_ACCOUNT_NAME" >> $GITHUB_OUTPUT

  terraform_infrastructure:
    name: Terraform infrastructure
    runs-on: ubuntu-latest
    needs: terraform_storage_backend
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt
        run: terraform fmt -check

      - name: Terraform init
        run: terraform init -backend-config="storage_account_name=${{ needs.terraform_storage_backend.outputs.TFSTATE_STORAGE_ACCOUNT_NAME }}"

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Terraform apply
        run: terraform apply -no-color -auto-approve

      - name: Get vm public ip address
        run: |
          VM_PUBLIC_IP_ADDRESS=$(terraform output -raw vm_public_ip_address)
          echo "VM_PUBLIC_IP_ADDRESS=$VM_PUBLIC_IP_ADDRESS" >> $GITHUB_ENV

      - name: Persist vm public ip address as secret in repository
        run: gh secret set VM_PUBLIC_IP_ADDRESS -b "${{ env.VM_PUBLIC_IP_ADDRESS }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get vm password
        run: |
          VM_PASSWORD=$(terraform output -raw vm_password)
          echo "VM_PASSWORD=$VM_PASSWORD" >> $GITHUB_ENV

      - name: Persist vm password as secret in repository
        run: gh secret set VM_PASSWORD -b "${{ env.VM_PASSWORD }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
